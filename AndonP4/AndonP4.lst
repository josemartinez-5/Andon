;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 05/03/2023 12:33:49 p. m.
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x297F      	GOTO       383
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00A9      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00AA      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
;AndonP4.c,109 :: 		void interrupt(){
;AndonP4.c,110 :: 		counter--;
0x000B	0x3001      	MOVLW      1
0x000C	0x02A2      	SUBWF      _counter, 1
0x000D	0x1C03      	BTFSS      STATUS, 0
0x000E	0x03A3      	DECF       _counter+1, 1
;AndonP4.c,111 :: 		T0IF_bit = 0;
0x000F	0x110B      	BCF        T0IF_bit, BitPos(T0IF_bit+0)
;AndonP4.c,112 :: 		}
L_end_interrupt:
L__interrupt42:
0x0010	0x082A      	MOVF       ___savePCLATH, 0
0x0011	0x008A      	MOVWF      PCLATH
0x0012	0x0E29      	SWAPF      ___saveSTATUS, 0
0x0013	0x0083      	MOVWF      STATUS
0x0014	0x0EFF      	SWAPF      R15, 1
0x0015	0x0E7F      	SWAPF      R15, 0
0x0016	0x0009      	RETFIE
; end of _interrupt
_UART1_Write:
;__Lib_UART_c67.c,39 :: 		
;__Lib_UART_c67.c,40 :: 		
L_UART1_Write3:
0x0017	0x1683      	BSF        STATUS, 5
0x0018	0x1303      	BCF        STATUS, 6
0x0019	0x1898      	BTFSC      TXSTA, 1
0x001A	0x281D      	GOTO       L_UART1_Write4
;__Lib_UART_c67.c,41 :: 		
0x001B	0x0000      	NOP
0x001C	0x2817      	GOTO       L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67.c,42 :: 		
0x001D	0x1283      	BCF        STATUS, 5
0x001E	0x0833      	MOVF       FARG_UART1_Write_data_, 0
0x001F	0x0099      	MOVWF      TXREG
;__Lib_UART_c67.c,43 :: 		
L_end_UART1_Write:
0x0020	0x0008      	RETURN
; end of _UART1_Write
_manda_mp3:
;mp3_chino.c,84 :: 		void manda_mp3()
;mp3_chino.c,86 :: 		UART1_Write(inicio);
0x0021	0x307E      	MOVLW      126
0x0022	0x1283      	BCF        STATUS, 5
0x0023	0x1303      	BCF        STATUS, 6
0x0024	0x00B3      	MOVWF      FARG_UART1_Write_data_
0x0025	0x2017      	CALL       _UART1_Write
;mp3_chino.c,87 :: 		UART1_Write(version);
0x0026	0x30FF      	MOVLW      255
0x0027	0x00B3      	MOVWF      FARG_UART1_Write_data_
0x0028	0x2017      	CALL       _UART1_Write
;mp3_chino.c,88 :: 		UART1_Write(largo);
0x0029	0x3006      	MOVLW      6
0x002A	0x00B3      	MOVWF      FARG_UART1_Write_data_
0x002B	0x2017      	CALL       _UART1_Write
;mp3_chino.c,89 :: 		UART1_Write(comando);
0x002C	0x0826      	MOVF       _comando, 0
0x002D	0x00B3      	MOVWF      FARG_UART1_Write_data_
0x002E	0x2017      	CALL       _UART1_Write
;mp3_chino.c,90 :: 		UART1_Write(eco);
0x002F	0x01B3      	CLRF       FARG_UART1_Write_data_
0x0030	0x2017      	CALL       _UART1_Write
;mp3_chino.c,91 :: 		UART1_Write(hi(parametro));
0x0031	0x0821      	MOVF       _parametro+1, 0
0x0032	0x00B3      	MOVWF      FARG_UART1_Write_data_
0x0033	0x2017      	CALL       _UART1_Write
;mp3_chino.c,92 :: 		UART1_Write(lo(parametro));
0x0034	0x0820      	MOVF       _parametro, 0
0x0035	0x00B3      	MOVWF      FARG_UART1_Write_data_
0x0036	0x2017      	CALL       _UART1_Write
;mp3_chino.c,93 :: 		UART1_Write(hi(checksum));
0x0037	0x0825      	MOVF       _checksum+1, 0
0x0038	0x00B3      	MOVWF      FARG_UART1_Write_data_
0x0039	0x2017      	CALL       _UART1_Write
;mp3_chino.c,94 :: 		UART1_Write(lo(checksum));
0x003A	0x0824      	MOVF       _checksum, 0
0x003B	0x00B3      	MOVWF      FARG_UART1_Write_data_
0x003C	0x2017      	CALL       _UART1_Write
;mp3_chino.c,95 :: 		UART1_Write(fin);
0x003D	0x30EF      	MOVLW      239
0x003E	0x00B3      	MOVWF      FARG_UART1_Write_data_
0x003F	0x2017      	CALL       _UART1_Write
;mp3_chino.c,96 :: 		parametro=0;
0x0040	0x01A0      	CLRF       _parametro
0x0041	0x01A1      	CLRF       _parametro+1
;mp3_chino.c,97 :: 		Delay_ms(100);
0x0042	0x3082      	MOVLW      130
0x0043	0x00FC      	MOVWF      R12
0x0044	0x30DD      	MOVLW      221
0x0045	0x00FD      	MOVWF      R13
L_manda_mp31:
0x0046	0x0BFD      	DECFSZ     R13, 1
0x0047	0x2846      	GOTO       L_manda_mp31
0x0048	0x0BFC      	DECFSZ     R12, 1
0x0049	0x2846      	GOTO       L_manda_mp31
0x004A	0x0000      	NOP
0x004B	0x0000      	NOP
;mp3_chino.c,98 :: 		}
L_end_manda_mp3:
0x004C	0x0008      	RETURN
; end of _manda_mp3
_calcula_checksum:
;mp3_chino.c,75 :: 		void calcula_checksum()
;mp3_chino.c,77 :: 		checksum=0;
0x004D	0x1283      	BCF        STATUS, 5
0x004E	0x1303      	BCF        STATUS, 6
0x004F	0x01A4      	CLRF       _checksum
0x0050	0x01A5      	CLRF       _checksum+1
;mp3_chino.c,79 :: 		checksum=version+largo+comando+eco+hi(parametro)+lo(parametro);
0x0051	0x0826      	MOVF       _comando, 0
0x0052	0x3E05      	ADDLW      5
0x0053	0x00F0      	MOVWF      R0
0x0054	0x3001      	MOVLW      1
0x0055	0x1803      	BTFSC      STATUS, 0
0x0056	0x3E01      	ADDLW      1
0x0057	0x00F1      	MOVWF      R0+1
0x0058	0x0821      	MOVF       _parametro+1, 0
0x0059	0x07F0      	ADDWF      R0, 1
0x005A	0x1803      	BTFSC      STATUS, 0
0x005B	0x0AF1      	INCF       R0+1, 1
0x005C	0x0820      	MOVF       _parametro, 0
0x005D	0x07F0      	ADDWF      R0, 1
0x005E	0x1803      	BTFSC      STATUS, 0
0x005F	0x0AF1      	INCF       R0+1, 1
0x0060	0x0870      	MOVF       R0, 0
0x0061	0x00A4      	MOVWF      _checksum
0x0062	0x0871      	MOVF       R0+1, 0
0x0063	0x00A5      	MOVWF      _checksum+1
;mp3_chino.c,80 :: 		checksum=-checksum;
0x0064	0x0870      	MOVF       R0, 0
0x0065	0x3C00      	SUBLW      0
0x0066	0x00A4      	MOVWF      _checksum
0x0067	0x0871      	MOVF       R0+1, 0
0x0068	0x1C03      	BTFSS      STATUS, 0
0x0069	0x3E01      	ADDLW      1
0x006A	0x01A5      	CLRF       _checksum+1
0x006B	0x02A5      	SUBWF      _checksum+1, 1
;mp3_chino.c,81 :: 		}
L_end_calcula_checksum:
0x006C	0x0008      	RETURN
; end of _calcula_checksum
_UART1_Init:
;__Lib_UART_c67.c,2 :: 		
;__Lib_UART_c67.c,5 :: 		
0x006D	0x1683      	BSF        STATUS, 5
0x006E	0x1303      	BCF        STATUS, 6
0x006F	0x1698      	BSF        TXSTA, 5
;__Lib_UART_c67.c,6 :: 		
0x0070	0x3090      	MOVLW      144
0x0071	0x1283      	BCF        STATUS, 5
0x0072	0x0098      	MOVWF      RCSTA
;__Lib_UART_c67.c,7 :: 		
0x0073	0x1683      	BSF        STATUS, 5
0x0074	0x1787      	BSF        TRISC7_bit, BitPos(TRISC7_bit+0)
;__Lib_UART_c67.c,8 :: 		
0x0075	0x1307      	BCF        TRISC6_bit, BitPos(TRISC6_bit+0)
;__Lib_UART_c67.c,10 :: 		
L_UART1_Init0:
0x0076	0x1283      	BCF        STATUS, 5
0x0077	0x1E8C      	BTFSS      PIR1, 5
0x0078	0x287C      	GOTO       L_UART1_Init1
;__Lib_UART_c67.c,11 :: 		
0x0079	0x081A      	MOVF       RCREG, 0
0x007A	0x00F0      	MOVWF      R0
0x007B	0x2876      	GOTO       L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,12 :: 		
L_end_UART1_Init:
0x007C	0x0008      	RETURN
; end of _UART1_Init
_mp3_single_repeat:
;mp3_chino.c,152 :: 		void mp3_single_repeat(unsigned int status)
;mp3_chino.c,154 :: 		comando=repetir_cancion;
0x007D	0x3019      	MOVLW      25
0x007E	0x1283      	BCF        STATUS, 5
0x007F	0x1303      	BCF        STATUS, 6
0x0080	0x00A6      	MOVWF      _comando
;mp3_chino.c,155 :: 		parametro=status;
0x0081	0x0831      	MOVF       FARG_mp3_single_repeat_status, 0
0x0082	0x00A0      	MOVWF      _parametro
0x0083	0x0832      	MOVF       FARG_mp3_single_repeat_status+1, 0
0x0084	0x00A1      	MOVWF      _parametro+1
;mp3_chino.c,156 :: 		calcula_checksum();
0x0085	0x204D      	CALL       _calcula_checksum
;mp3_chino.c,157 :: 		manda_mp3();
0x0086	0x2021      	CALL       _manda_mp3
;mp3_chino.c,158 :: 		}
L_end_mp3_single_repeat:
0x0087	0x0008      	RETURN
; end of _mp3_single_repeat
_Delay_500us:
;__Lib_Delays.c,27 :: 		void Delay_500us() {
;__Lib_Delays.c,28 :: 		Delay_us(498);
0x0088	0x30A5      	MOVLW      165
0x0089	0x1283      	BCF        STATUS, 5
0x008A	0x1303      	BCF        STATUS, 6
0x008B	0x00FD      	MOVWF      R13
L_Delay_500us4:
0x008C	0x0BFD      	DECFSZ     R13, 1
0x008D	0x288C      	GOTO       L_Delay_500us4
0x008E	0x0000      	NOP
0x008F	0x0000      	NOP
;__Lib_Delays.c,29 :: 		}
L_end_Delay_500us:
0x0090	0x0008      	RETURN
; end of _Delay_500us
_init_TMR0:
;AndonP4.c,96 :: 		void init_TMR0(unsigned int cycles){
;AndonP4.c,98 :: 		OPTION_REG.B5 = 0;
0x0091	0x1683      	BSF        STATUS, 5
0x0092	0x1303      	BCF        STATUS, 6
0x0093	0x1281      	BCF        OPTION_REG, 5
;AndonP4.c,101 :: 		T0IE_bit = 1;
0x0094	0x168B      	BSF        T0IE_bit, BitPos(T0IE_bit+0)
;AndonP4.c,104 :: 		counter = cycles;
0x0095	0x1283      	BCF        STATUS, 5
0x0096	0x0831      	MOVF       FARG_init_TMR0_cycles, 0
0x0097	0x00A2      	MOVWF      _counter
0x0098	0x0832      	MOVF       FARG_init_TMR0_cycles+1, 0
0x0099	0x00A3      	MOVWF      _counter+1
;AndonP4.c,107 :: 		}
L_end_init_TMR0:
0x009A	0x0008      	RETURN
; end of _init_TMR0
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x009B	0x1283      	BCF        STATUS, 5
0x009C	0x1303      	BCF        STATUS, 6
0x009D	0x0828      	MOVF       ___DoICPAddr+1, 0
0x009E	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x009F	0x0827      	MOVF       ___DoICPAddr, 0
0x00A0	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x00A1	0x0008      	RETURN
; end of _____DoICP
_init_mp3:
;mp3_chino.c,68 :: 		void init_mp3()
;mp3_chino.c,71 :: 		UART1_Init(9600);
0x00A2	0x3019      	MOVLW      25
0x00A3	0x1683      	BSF        STATUS, 5
0x00A4	0x1303      	BCF        STATUS, 6
0x00A5	0x0099      	MOVWF      SPBRG
0x00A6	0x1518      	BSF        TXSTA, 2
0x00A7	0x206D      	CALL       _UART1_Init
;mp3_chino.c,72 :: 		Delay_ms(1000);
0x00A8	0x3006      	MOVLW      6
0x00A9	0x00FB      	MOVWF      R11
0x00AA	0x3013      	MOVLW      19
0x00AB	0x00FC      	MOVWF      R12
0x00AC	0x30AD      	MOVLW      173
0x00AD	0x00FD      	MOVWF      R13
L_init_mp30:
0x00AE	0x0BFD      	DECFSZ     R13, 1
0x00AF	0x28AE      	GOTO       L_init_mp30
0x00B0	0x0BFC      	DECFSZ     R12, 1
0x00B1	0x28AE      	GOTO       L_init_mp30
0x00B2	0x0BFB      	DECFSZ     R11, 1
0x00B3	0x28AE      	GOTO       L_init_mp30
0x00B4	0x0000      	NOP
0x00B5	0x0000      	NOP
;mp3_chino.c,73 :: 		}
L_end_init_mp3:
0x00B6	0x0008      	RETURN
; end of _init_mp3
_end_TMR0:
;AndonP4.c,114 :: 		void end_TMR0(){
;AndonP4.c,116 :: 		OPTION_REG.B5 = 1;
0x00B7	0x1683      	BSF        STATUS, 5
0x00B8	0x1303      	BCF        STATUS, 6
0x00B9	0x1681      	BSF        OPTION_REG, 5
;AndonP4.c,119 :: 		T0IE_bit = 0;
0x00BA	0x128B      	BCF        T0IE_bit, BitPos(T0IE_bit+0)
;AndonP4.c,120 :: 		}
L_end_end_TMR0:
0x00BB	0x0008      	RETURN
; end of _end_TMR0
_mp3_stop:
;mp3_chino.c,373 :: 		void mp3_stop(){
;mp3_chino.c,374 :: 		comando = stop;
0x00BC	0x3016      	MOVLW      22
0x00BD	0x1283      	BCF        STATUS, 5
0x00BE	0x1303      	BCF        STATUS, 6
0x00BF	0x00A6      	MOVWF      _comando
;mp3_chino.c,375 :: 		calcula_checksum();
0x00C0	0x204D      	CALL       _calcula_checksum
;mp3_chino.c,376 :: 		manda_mp3();
0x00C1	0x2021      	CALL       _manda_mp3
;mp3_chino.c,377 :: 		}
L_end_mp3_stop:
0x00C2	0x0008      	RETURN
; end of _mp3_stop
_mp3_play_x:
;mp3_chino.c,114 :: 		void mp3_play_x(unsigned int cancion)
;mp3_chino.c,116 :: 		comando=archivo;
0x00C3	0x3003      	MOVLW      3
0x00C4	0x1283      	BCF        STATUS, 5
0x00C5	0x1303      	BCF        STATUS, 6
0x00C6	0x00A6      	MOVWF      _comando
;mp3_chino.c,117 :: 		parametro=cancion;
0x00C7	0x0831      	MOVF       FARG_mp3_play_x_cancion, 0
0x00C8	0x00A0      	MOVWF      _parametro
0x00C9	0x0832      	MOVF       FARG_mp3_play_x_cancion+1, 0
0x00CA	0x00A1      	MOVWF      _parametro+1
;mp3_chino.c,118 :: 		calcula_checksum();
0x00CB	0x204D      	CALL       _calcula_checksum
;mp3_chino.c,119 :: 		manda_mp3();
0x00CC	0x2021      	CALL       _manda_mp3
;mp3_chino.c,120 :: 		}
L_end_mp3_play_x:
0x00CD	0x0008      	RETURN
; end of _mp3_play_x
_set_rojo:
;AndonP4.c,122 :: 		void set_rojo(){
;AndonP4.c,124 :: 		LED_rojo = ~LED_rojo;
0x00CE	0x3010      	MOVLW      16
0x00CF	0x1283      	BCF        STATUS, 5
0x00D0	0x1303      	BCF        STATUS, 6
0x00D1	0x0686      	XORWF      RB4_bit, 1
;AndonP4.c,127 :: 		if(LED_rojo){
0x00D2	0x1E06      	BTFSS      RB4_bit, BitPos(RB4_bit+0)
0x00D3	0x28E2      	GOTO       L_set_rojo23
;AndonP4.c,129 :: 		init_TMR0(75);
0x00D4	0x304B      	MOVLW      75
0x00D5	0x00B1      	MOVWF      FARG_init_TMR0_cycles
0x00D6	0x3000      	MOVLW      0
0x00D7	0x00B2      	MOVWF      FARG_init_TMR0_cycles+1
0x00D8	0x2091      	CALL       _init_TMR0
;AndonP4.c,131 :: 		mp3_play_x(1);
0x00D9	0x3001      	MOVLW      1
0x00DA	0x00B1      	MOVWF      FARG_mp3_play_x_cancion
0x00DB	0x3000      	MOVLW      0
0x00DC	0x00B2      	MOVWF      FARG_mp3_play_x_cancion+1
0x00DD	0x20C3      	CALL       _mp3_play_x
;AndonP4.c,133 :: 		mp3_single_repeat(0);
0x00DE	0x01B1      	CLRF       FARG_mp3_single_repeat_status
0x00DF	0x01B2      	CLRF       FARG_mp3_single_repeat_status+1
0x00E0	0x207D      	CALL       _mp3_single_repeat
;AndonP4.c,134 :: 		}
0x00E1	0x28E4      	GOTO       L_set_rojo24
L_set_rojo23:
;AndonP4.c,138 :: 		end_TMR0();
0x00E2	0x20B7      	CALL       _end_TMR0
;AndonP4.c,141 :: 		mp3_stop();
0x00E3	0x20BC      	CALL       _mp3_stop
;AndonP4.c,142 :: 		}
L_set_rojo24:
;AndonP4.c,143 :: 		}
L_end_set_rojo:
0x00E4	0x0008      	RETURN
; end of _set_rojo
_Button:
;__Lib_Button.c,6 :: 		
;__Lib_Button.c,8 :: 		
0x00E5	0x1283      	BCF        STATUS, 5
0x00E6	0x1303      	BCF        STATUS, 6
0x00E7	0x01B0      	CLRF       Button_rslt_L0
;__Lib_Button.c,11 :: 		
0x00E8	0x082C      	MOVF       FARG_Button_pin, 0
0x00E9	0x00F1      	MOVWF      R1
0x00EA	0x3001      	MOVLW      1
0x00EB	0x00F0      	MOVWF      R0
0x00EC	0x0871      	MOVF       R1, 0
L__Button5:
0x00ED	0x1903      	BTFSC      STATUS, 2
0x00EE	0x28F3      	GOTO       L__Button6
0x00EF	0x0DF0      	RLF        R0, 1
0x00F0	0x1070      	BCF        R0, 0
0x00F1	0x3EFF      	ADDLW      255
0x00F2	0x28ED      	GOTO       L__Button5
L__Button6:
0x00F3	0x0870      	MOVF       R0, 0
0x00F4	0x00AF      	MOVWF      Button_pMask_L0
;__Lib_Button.c,13 :: 		
0x00F5	0x082B      	MOVF       FARG_Button_port, 0
0x00F6	0x0084      	MOVWF      FSR
0x00F7	0x0870      	MOVF       R0, 0
0x00F8	0x0500      	ANDWF      INDF, 0
0x00F9	0x00F1      	MOVWF      R1
0x00FA	0x0871      	MOVF       R1, 0
0x00FB	0x3001      	MOVLW      1
0x00FC	0x1D03      	BTFSS      STATUS, 2
0x00FD	0x3000      	MOVLW      0
0x00FE	0x00F0      	MOVWF      R0
0x00FF	0x082E      	MOVF       FARG_Button_active_state, 0
0x0100	0x06F0      	XORWF      R0, 1
0x0101	0x1903      	BTFSC      STATUS, 2
0x0102	0x291B      	GOTO       L_Button0
;__Lib_Button.c,15 :: 		
L_Button1:
0x0103	0x082D      	MOVF       FARG_Button_time_ms, 0
0x0104	0x3C00      	SUBLW      0
0x0105	0x1803      	BTFSC      STATUS, 0
0x0106	0x290B      	GOTO       L_Button2
;__Lib_Button.c,16 :: 		
0x0107	0x2088      	CALL       _Delay_500us
;__Lib_Button.c,17 :: 		
0x0108	0x2088      	CALL       _Delay_500us
;__Lib_Button.c,18 :: 		
0x0109	0x03AD      	DECF       FARG_Button_time_ms, 1
;__Lib_Button.c,19 :: 		
0x010A	0x2903      	GOTO       L_Button1
L_Button2:
;__Lib_Button.c,21 :: 		
0x010B	0x082B      	MOVF       FARG_Button_port, 0
0x010C	0x0084      	MOVWF      FSR
0x010D	0x082F      	MOVF       Button_pMask_L0, 0
0x010E	0x0500      	ANDWF      INDF, 0
0x010F	0x00F1      	MOVWF      R1
0x0110	0x0871      	MOVF       R1, 0
0x0111	0x3001      	MOVLW      1
0x0112	0x1D03      	BTFSS      STATUS, 2
0x0113	0x3000      	MOVLW      0
0x0114	0x00F0      	MOVWF      R0
0x0115	0x082E      	MOVF       FARG_Button_active_state, 0
0x0116	0x06F0      	XORWF      R0, 1
0x0117	0x1903      	BTFSC      STATUS, 2
0x0118	0x291B      	GOTO       L_Button3
;__Lib_Button.c,22 :: 		
0x0119	0x30FF      	MOVLW      255
0x011A	0x00B0      	MOVWF      Button_rslt_L0
L_Button3:
;__Lib_Button.c,23 :: 		
L_Button0:
;__Lib_Button.c,25 :: 		
0x011B	0x0830      	MOVF       Button_rslt_L0, 0
0x011C	0x00F0      	MOVWF      R0
;__Lib_Button.c,26 :: 		
L_end_Button:
0x011D	0x0008      	RETURN
; end of _Button
_set_amarillo:
;AndonP4.c,145 :: 		void set_amarillo(){
;AndonP4.c,146 :: 		PORTB = PORTB & 0b11101111;
0x011E	0x30EF      	MOVLW      239
0x011F	0x1283      	BCF        STATUS, 5
0x0120	0x1303      	BCF        STATUS, 6
0x0121	0x0586      	ANDWF      PORTB, 1
;AndonP4.c,147 :: 		LED_amarillo = ~LED_amarillo;
0x0122	0x3020      	MOVLW      32
0x0123	0x0686      	XORWF      RB5_bit, 1
;AndonP4.c,148 :: 		if(LED_amarillo){
0x0124	0x1E86      	BTFSS      RB5_bit, BitPos(RB5_bit+0)
0x0125	0x2934      	GOTO       L_set_amarillo25
;AndonP4.c,150 :: 		init_TMR0(75);
0x0126	0x304B      	MOVLW      75
0x0127	0x00B1      	MOVWF      FARG_init_TMR0_cycles
0x0128	0x3000      	MOVLW      0
0x0129	0x00B2      	MOVWF      FARG_init_TMR0_cycles+1
0x012A	0x2091      	CALL       _init_TMR0
;AndonP4.c,151 :: 		mp3_play_x(2);
0x012B	0x3002      	MOVLW      2
0x012C	0x00B1      	MOVWF      FARG_mp3_play_x_cancion
0x012D	0x3000      	MOVLW      0
0x012E	0x00B2      	MOVWF      FARG_mp3_play_x_cancion+1
0x012F	0x20C3      	CALL       _mp3_play_x
;AndonP4.c,152 :: 		mp3_single_repeat(0);
0x0130	0x01B1      	CLRF       FARG_mp3_single_repeat_status
0x0131	0x01B2      	CLRF       FARG_mp3_single_repeat_status+1
0x0132	0x207D      	CALL       _mp3_single_repeat
;AndonP4.c,153 :: 		}
0x0133	0x2936      	GOTO       L_set_amarillo26
L_set_amarillo25:
;AndonP4.c,155 :: 		end_TMR0();
0x0134	0x20B7      	CALL       _end_TMR0
;AndonP4.c,156 :: 		mp3_stop();
0x0135	0x20BC      	CALL       _mp3_stop
;AndonP4.c,157 :: 		}
L_set_amarillo26:
;AndonP4.c,158 :: 		}
L_end_set_amarillo:
0x0136	0x0008      	RETURN
; end of _set_amarillo
_set_azul:
;AndonP4.c,160 :: 		void set_azul(){
;AndonP4.c,161 :: 		PORTB = PORTB & 0b11001111;
0x0137	0x30CF      	MOVLW      207
0x0138	0x1283      	BCF        STATUS, 5
0x0139	0x1303      	BCF        STATUS, 6
0x013A	0x0586      	ANDWF      PORTB, 1
;AndonP4.c,162 :: 		LED_azul = ~LED_azul;
0x013B	0x3040      	MOVLW      64
0x013C	0x0686      	XORWF      RB6_bit, 1
;AndonP4.c,163 :: 		if(LED_azul){
0x013D	0x1F06      	BTFSS      RB6_bit, BitPos(RB6_bit+0)
0x013E	0x294D      	GOTO       L_set_azul27
;AndonP4.c,165 :: 		init_TMR0(75);
0x013F	0x304B      	MOVLW      75
0x0140	0x00B1      	MOVWF      FARG_init_TMR0_cycles
0x0141	0x3000      	MOVLW      0
0x0142	0x00B2      	MOVWF      FARG_init_TMR0_cycles+1
0x0143	0x2091      	CALL       _init_TMR0
;AndonP4.c,166 :: 		mp3_play_x(3);
0x0144	0x3003      	MOVLW      3
0x0145	0x00B1      	MOVWF      FARG_mp3_play_x_cancion
0x0146	0x3000      	MOVLW      0
0x0147	0x00B2      	MOVWF      FARG_mp3_play_x_cancion+1
0x0148	0x20C3      	CALL       _mp3_play_x
;AndonP4.c,167 :: 		mp3_single_repeat(0);
0x0149	0x01B1      	CLRF       FARG_mp3_single_repeat_status
0x014A	0x01B2      	CLRF       FARG_mp3_single_repeat_status+1
0x014B	0x207D      	CALL       _mp3_single_repeat
;AndonP4.c,168 :: 		}
0x014C	0x294F      	GOTO       L_set_azul28
L_set_azul27:
;AndonP4.c,170 :: 		end_TMR0();
0x014D	0x20B7      	CALL       _end_TMR0
;AndonP4.c,171 :: 		mp3_stop();
0x014E	0x20BC      	CALL       _mp3_stop
;AndonP4.c,172 :: 		}
L_set_azul28:
;AndonP4.c,173 :: 		}
L_end_set_azul:
0x014F	0x0008      	RETURN
; end of _set_azul
_init:
;AndonP4.c,68 :: 		void init(){
;AndonP4.c,74 :: 		OPTION_REG = 0b00100111;
0x0150	0x3027      	MOVLW      39
0x0151	0x1683      	BSF        STATUS, 5
0x0152	0x1303      	BCF        STATUS, 6
0x0153	0x0081      	MOVWF      OPTION_REG
;AndonP4.c,79 :: 		INTCON = 0b10000000;
0x0154	0x3080      	MOVLW      128
0x0155	0x008B      	MOVWF      INTCON
;AndonP4.c,82 :: 		TRISB = 0b00001111;
0x0156	0x300F      	MOVLW      15
0x0157	0x0086      	MOVWF      TRISB
;AndonP4.c,84 :: 		PORTB = 0b00000000;
0x0158	0x1283      	BCF        STATUS, 5
0x0159	0x0186      	CLRF       PORTB
;AndonP4.c,86 :: 		TRISC6_bit = 0;
0x015A	0x1683      	BSF        STATUS, 5
0x015B	0x1307      	BCF        TRISC6_bit, BitPos(TRISC6_bit+0)
;AndonP4.c,90 :: 		init_mp3();
0x015C	0x20A2      	CALL       _init_mp3
;AndonP4.c,94 :: 		}
L_end_init:
0x015D	0x0008      	RETURN
; end of _init
_set_verde:
;AndonP4.c,175 :: 		void set_verde(){
;AndonP4.c,176 :: 		PORTB = PORTB & 0b10001111;
0x015E	0x308F      	MOVLW      143
0x015F	0x1283      	BCF        STATUS, 5
0x0160	0x1303      	BCF        STATUS, 6
0x0161	0x0586      	ANDWF      PORTB, 1
;AndonP4.c,177 :: 		LED_verde = ~LED_verde;
0x0162	0x3080      	MOVLW      128
0x0163	0x0686      	XORWF      RB7_bit, 1
;AndonP4.c,178 :: 		if(LED_verde){
0x0164	0x1F86      	BTFSS      RB7_bit, BitPos(RB7_bit+0)
0x0165	0x2971      	GOTO       L_set_verde29
;AndonP4.c,179 :: 		end_TMR0();
0x0166	0x20B7      	CALL       _end_TMR0
;AndonP4.c,180 :: 		mp3_play_x(4);
0x0167	0x3004      	MOVLW      4
0x0168	0x1283      	BCF        STATUS, 5
0x0169	0x00B1      	MOVWF      FARG_mp3_play_x_cancion
0x016A	0x3000      	MOVLW      0
0x016B	0x00B2      	MOVWF      FARG_mp3_play_x_cancion+1
0x016C	0x20C3      	CALL       _mp3_play_x
;AndonP4.c,181 :: 		mp3_single_repeat(0);
0x016D	0x01B1      	CLRF       FARG_mp3_single_repeat_status
0x016E	0x01B2      	CLRF       FARG_mp3_single_repeat_status+1
0x016F	0x207D      	CALL       _mp3_single_repeat
;AndonP4.c,182 :: 		}
0x0170	0x2972      	GOTO       L_set_verde30
L_set_verde29:
;AndonP4.c,184 :: 		mp3_stop();
0x0171	0x20BC      	CALL       _mp3_stop
L_set_verde30:
;AndonP4.c,185 :: 		}
L_end_set_verde:
0x0172	0x0008      	RETURN
; end of _set_verde
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x0173	0x209B      	CALL       _____DoICP
0x0174	0x118A      	BCF        PCLATH, 3
0x0175	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x0176	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x0177	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0178	0x0AA7      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0179	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x017A	0x0AA8      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x017B	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x017C	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x017D	0x2973      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x017E	0x0008      	RETURN
; end of ___CC2DW
_main:
0x017F	0x2208      	CALL       520
;AndonP4.c,29 :: 		void main(){
;AndonP4.c,31 :: 		init();
0x0180	0x2150      	CALL       _init
;AndonP4.c,33 :: 		while(1){
L_main0:
;AndonP4.c,36 :: 		if(Button(&PORTB, RB0, 5, 0)){
0x0181	0x3006      	MOVLW      PORTB
0x0182	0x00AB      	MOVWF      FARG_Button_port
0x0183	0x01AC      	CLRF       FARG_Button_pin
0x0184	0x3005      	MOVLW      5
0x0185	0x00AD      	MOVWF      FARG_Button_time_ms
0x0186	0x01AE      	CLRF       FARG_Button_active_state
0x0187	0x20E5      	CALL       _Button
0x0188	0x0870      	MOVF       R0, 0
0x0189	0x1903      	BTFSC      STATUS, 2
0x018A	0x299F      	GOTO       L_main2
;AndonP4.c,37 :: 		if(!((PORTB >> 5) & 0b00000111)){
0x018B	0x3005      	MOVLW      5
0x018C	0x00F1      	MOVWF      R1
0x018D	0x0806      	MOVF       PORTB, 0
0x018E	0x00F0      	MOVWF      R0
0x018F	0x0871      	MOVF       R1, 0
L__main32:
0x0190	0x1903      	BTFSC      STATUS, 2
0x0191	0x2996      	GOTO       L__main33
0x0192	0x0CF0      	RRF        R0, 1
0x0193	0x13F0      	BCF        R0, 7
0x0194	0x3EFF      	ADDLW      255
0x0195	0x2990      	GOTO       L__main32
L__main33:
0x0196	0x3007      	MOVLW      7
0x0197	0x05F0      	ANDWF      R0, 1
0x0198	0x0870      	MOVF       R0, 0
0x0199	0x1D03      	BTFSS      STATUS, 2
0x019A	0x299C      	GOTO       L_main3
;AndonP4.c,38 :: 		set_rojo();
0x019B	0x20CE      	CALL       _set_rojo
;AndonP4.c,39 :: 		}
L_main3:
;AndonP4.c,41 :: 		while(BTN_rojo == 0);
L_main4:
0x019C	0x1806      	BTFSC      RB0_bit, BitPos(RB0_bit+0)
0x019D	0x299F      	GOTO       L_main5
0x019E	0x299C      	GOTO       L_main4
L_main5:
;AndonP4.c,42 :: 		}
L_main2:
;AndonP4.c,43 :: 		if(Button(&PORTB, RB1, 5, 0)){
0x019F	0x3006      	MOVLW      PORTB
0x01A0	0x00AB      	MOVWF      FARG_Button_port
0x01A1	0x3001      	MOVLW      1
0x01A2	0x00AC      	MOVWF      FARG_Button_pin
0x01A3	0x3005      	MOVLW      5
0x01A4	0x00AD      	MOVWF      FARG_Button_time_ms
0x01A5	0x01AE      	CLRF       FARG_Button_active_state
0x01A6	0x20E5      	CALL       _Button
0x01A7	0x0870      	MOVF       R0, 0
0x01A8	0x1903      	BTFSC      STATUS, 2
0x01A9	0x29BE      	GOTO       L_main6
;AndonP4.c,44 :: 		if(!((PORTB >> 6) & 0b00000011)){
0x01AA	0x3006      	MOVLW      6
0x01AB	0x00F1      	MOVWF      R1
0x01AC	0x0806      	MOVF       PORTB, 0
0x01AD	0x00F0      	MOVWF      R0
0x01AE	0x0871      	MOVF       R1, 0
L__main34:
0x01AF	0x1903      	BTFSC      STATUS, 2
0x01B0	0x29B5      	GOTO       L__main35
0x01B1	0x0CF0      	RRF        R0, 1
0x01B2	0x13F0      	BCF        R0, 7
0x01B3	0x3EFF      	ADDLW      255
0x01B4	0x29AF      	GOTO       L__main34
L__main35:
0x01B5	0x3003      	MOVLW      3
0x01B6	0x05F0      	ANDWF      R0, 1
0x01B7	0x0870      	MOVF       R0, 0
0x01B8	0x1D03      	BTFSS      STATUS, 2
0x01B9	0x29BB      	GOTO       L_main7
;AndonP4.c,45 :: 		set_amarillo();
0x01BA	0x211E      	CALL       _set_amarillo
;AndonP4.c,46 :: 		}
L_main7:
;AndonP4.c,47 :: 		while(BTN_amarillo == 0);
L_main8:
0x01BB	0x1886      	BTFSC      RB1_bit, BitPos(RB1_bit+0)
0x01BC	0x29BE      	GOTO       L_main9
0x01BD	0x29BB      	GOTO       L_main8
L_main9:
;AndonP4.c,48 :: 		}
L_main6:
;AndonP4.c,49 :: 		if(Button(&PORTB, RB2, 5, 0)){
0x01BE	0x3006      	MOVLW      PORTB
0x01BF	0x00AB      	MOVWF      FARG_Button_port
0x01C0	0x3002      	MOVLW      2
0x01C1	0x00AC      	MOVWF      FARG_Button_pin
0x01C2	0x3005      	MOVLW      5
0x01C3	0x00AD      	MOVWF      FARG_Button_time_ms
0x01C4	0x01AE      	CLRF       FARG_Button_active_state
0x01C5	0x20E5      	CALL       _Button
0x01C6	0x0870      	MOVF       R0, 0
0x01C7	0x1903      	BTFSC      STATUS, 2
0x01C8	0x29DA      	GOTO       L_main10
;AndonP4.c,50 :: 		if(!((PORTB >> 7) & 0b00000001)){
0x01C9	0x3007      	MOVLW      7
0x01CA	0x00F0      	MOVWF      R0
0x01CB	0x0806      	MOVF       PORTB, 0
0x01CC	0x00F1      	MOVWF      R1
0x01CD	0x0870      	MOVF       R0, 0
L__main36:
0x01CE	0x1903      	BTFSC      STATUS, 2
0x01CF	0x29D4      	GOTO       L__main37
0x01D0	0x0CF1      	RRF        R1, 1
0x01D1	0x13F1      	BCF        R1, 7
0x01D2	0x3EFF      	ADDLW      255
0x01D3	0x29CE      	GOTO       L__main36
L__main37:
0x01D4	0x1871      	BTFSC      R1, 0
0x01D5	0x29D7      	GOTO       L_main11
;AndonP4.c,51 :: 		set_azul();
0x01D6	0x2137      	CALL       _set_azul
;AndonP4.c,52 :: 		}
L_main11:
;AndonP4.c,53 :: 		while(BTN_azul == 0);
L_main12:
0x01D7	0x1906      	BTFSC      RB2_bit, BitPos(RB2_bit+0)
0x01D8	0x29DA      	GOTO       L_main13
0x01D9	0x29D7      	GOTO       L_main12
L_main13:
;AndonP4.c,54 :: 		}
L_main10:
;AndonP4.c,55 :: 		if(Button(&PORTB, RB3, 5, 0)){
0x01DA	0x3006      	MOVLW      PORTB
0x01DB	0x00AB      	MOVWF      FARG_Button_port
0x01DC	0x3003      	MOVLW      3
0x01DD	0x00AC      	MOVWF      FARG_Button_pin
0x01DE	0x3005      	MOVLW      5
0x01DF	0x00AD      	MOVWF      FARG_Button_time_ms
0x01E0	0x01AE      	CLRF       FARG_Button_active_state
0x01E1	0x20E5      	CALL       _Button
0x01E2	0x0870      	MOVF       R0, 0
0x01E3	0x1903      	BTFSC      STATUS, 2
0x01E4	0x29E9      	GOTO       L_main14
;AndonP4.c,56 :: 		set_verde();
0x01E5	0x215E      	CALL       _set_verde
;AndonP4.c,57 :: 		while(BTN_verde == 0);
L_main15:
0x01E6	0x1986      	BTFSC      RB3_bit, BitPos(RB3_bit+0)
0x01E7	0x29E9      	GOTO       L_main16
0x01E8	0x29E6      	GOTO       L_main15
L_main16:
;AndonP4.c,58 :: 		}
L_main14:
;AndonP4.c,60 :: 		if(counter == 0){
0x01E9	0x3000      	MOVLW      0
0x01EA	0x0623      	XORWF      _counter+1, 0
0x01EB	0x1D03      	BTFSS      STATUS, 2
0x01EC	0x29EF      	GOTO       L__main38
0x01ED	0x3000      	MOVLW      0
0x01EE	0x0622      	XORWF      _counter, 0
L__main38:
0x01EF	0x1D03      	BTFSS      STATUS, 2
0x01F0	0x29FC      	GOTO       L_main17
;AndonP4.c,61 :: 		if(LED_rojo) set_amarillo();
0x01F1	0x1E06      	BTFSS      RB4_bit, BitPos(RB4_bit+0)
0x01F2	0x29F5      	GOTO       L_main18
0x01F3	0x211E      	CALL       _set_amarillo
0x01F4	0x29FC      	GOTO       L_main19
L_main18:
;AndonP4.c,62 :: 		else if(LED_amarillo) set_azul();
0x01F5	0x1E86      	BTFSS      RB5_bit, BitPos(RB5_bit+0)
0x01F6	0x29F9      	GOTO       L_main20
0x01F7	0x2137      	CALL       _set_azul
0x01F8	0x29FC      	GOTO       L_main21
L_main20:
;AndonP4.c,63 :: 		else if(LED_azul) set_verde();
0x01F9	0x1F06      	BTFSS      RB6_bit, BitPos(RB6_bit+0)
0x01FA	0x29FC      	GOTO       L_main22
0x01FB	0x215E      	CALL       _set_verde
L_main22:
L_main21:
L_main19:
;AndonP4.c,64 :: 		}
L_main17:
;AndonP4.c,65 :: 		}
0x01FC	0x2981      	GOTO       L_main0
;AndonP4.c,66 :: 		}
L_end_main:
0x01FD	0x29FD      	GOTO       $+0
; end of _main
0x0208	0x3020      	MOVLW      32
0x0209	0x0084      	MOVWF      FSR
0x020A	0x3004      	MOVLW      4
0x020B	0x1283      	BCF        STATUS, 5
0x020C	0x1303      	BCF        STATUS, 6
0x020D	0x00F0      	MOVWF      R0
0x020E	0x3003      	MOVLW      3
0x020F	0x00A7      	MOVWF      ___DoICPAddr
0x0210	0x3002      	MOVLW      2
0x0211	0x00A8      	MOVWF      40
0x0212	0x2173      	CALL       371
0x0213	0x0008      	RETURN
;mp3_chino.c,0 :: ?ICS_parametro
0x0203	0x3400 ;?ICS_parametro+0
0x0204	0x3400 ;?ICS_parametro+1
; end of ?ICS_parametro
;AndonP4.c,0 :: ?ICS_counter
0x0205	0x3401 ;?ICS_counter+0
0x0206	0x3400 ;?ICS_counter+1
; end of ?ICS_counter
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [19]    _interrupt
0x0017      [10]    _UART1_Write
0x0021      [44]    _manda_mp3
0x004D      [32]    _calcula_checksum
0x006D      [16]    _UART1_Init
0x007D      [11]    _mp3_single_repeat
0x0088       [9]    _Delay_500us
0x0091      [10]    _init_TMR0
0x009B       [7]    _____DoICP
0x00A2      [21]    _init_mp3
0x00B7       [5]    _end_TMR0
0x00BC       [7]    _mp3_stop
0x00C3      [11]    _mp3_play_x
0x00CE      [23]    _set_rojo
0x00E5      [57]    _Button
0x011E      [25]    _set_amarillo
0x0137      [25]    _set_azul
0x0150      [14]    _init
0x015E      [21]    _set_verde
0x0173      [12]    ___CC2DW
0x017F     [126]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [0]    RB2_bit
0x0006       [0]    RB1_bit
0x0006       [0]    RB0_bit
0x0006       [1]    PORTB
0x0006       [0]    RB6_bit
0x0006       [0]    RB7_bit
0x0006       [0]    RB5_bit
0x0006       [0]    RB3_bit
0x0006       [0]    RB4_bit
0x000A       [1]    PCLATH
0x000B       [0]    T0IF_bit
0x000B       [0]    T0IE_bit
0x000B       [1]    INTCON
0x000C       [1]    PIR1
0x0018       [1]    RCSTA
0x0019       [1]    TXREG
0x001A       [1]    RCREG
0x0020       [2]    _parametro
0x0022       [2]    _counter
0x0024       [2]    _checksum
0x0026       [1]    _comando
0x0027       [2]    ___DoICPAddr
0x0029       [1]    ___saveSTATUS
0x002A       [1]    ___savePCLATH
0x002B       [1]    FARG_Button_port
0x002C       [1]    FARG_Button_pin
0x002D       [1]    FARG_Button_time_ms
0x002E       [1]    FARG_Button_active_state
0x002F       [1]    Button_pMask_L0
0x0030       [1]    Button_rslt_L0
0x0031       [2]    FARG_init_TMR0_cycles
0x0031       [2]    FARG_mp3_single_repeat_status
0x0031       [2]    FARG_mp3_play_x_cancion
0x0033       [1]    FARG_UART1_Write_data_
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0086       [1]    TRISB
0x0087       [0]    TRISC7_bit
0x0087       [0]    TRISC6_bit
0x0098       [1]    TXSTA
0x0099       [1]    SPBRG
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0203       [2]    ?ICS_parametro
0x0205       [2]    ?ICS_counter
//** Label List: ** 
//----------------------------------------------
  L_main0
  L_main1
  L_main2
  L_main3
  L_main4
  L_main5
  L_main6
  L_main7
  L_main8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_main17
  L_main18
  L_main19
  L_main20
  L_main21
  L_main22
  L_set_rojo23
  L_set_rojo24
  L_set_amarillo25
  L_set_amarillo26
  L_set_azul27
  L_set_azul28
  L_set_verde29
  L_set_verde30
  L_end_main
  _main
  L__main32
  L__main33
  L__main34
  L__main35
  L__main36
  L__main37
  L__main38
  L_end_init
  _init
  L_end_init_TMR0
  _init_TMR0
  L_end_interrupt
  _interrupt
  L__interrupt42
  L_end_end_TMR0
  _end_TMR0
  L_end_set_rojo
  _set_rojo
  L_end_set_amarillo
  _set_amarillo
  L_end_set_azul
  _set_azul
  L_end_set_verde
  _set_verde
  L_init_mp30
  L_manda_mp31
  L_end_init_mp3
  _init_mp3
  L_end_calcula_checksum
  _calcula_checksum
  L_end_manda_mp3
  _manda_mp3
  L_end_mp3_next
  _mp3_next
  L_end_mp3_previo
  _mp3_previo
  L_end_mp3_play_x
  _mp3_play_x
  L_end_mp3_volumen_sube
  _mp3_volumen_sube
  L_end_mp3_volumen_baja
  _mp3_volumen_baja
  L_end_mp3_volumen_x
  _mp3_volumen_x
  L_end_mp3_equializa
  _mp3_equializa
  L_end_mp3_single_repeat
  _mp3_single_repeat
  L_end_mp3_fuente
  _mp3_fuente
  L_end_mp3_modo_off
  _mp3_modo_off
  L_end_mp3_modo_normal
  _mp3_modo_normal
  L_end_mp3_modo_reset
  _mp3_modo_reset
  L_end_mp3_modo_play
  _mp3_modo_play
  L_end_mp3_modo_pausa
  _mp3_modo_pausa
  L_end_mp3_suena
  _mp3_suena
  L_end_mp3_volumen_set
  _mp3_volumen_set
  L_end_mp3_repite_ya
  _mp3_repite_ya
  L_end_mp3_q_estado_usb
  _mp3_q_estado_usb
  L_end_mp3_q_estado_sd
  _mp3_q_estado_sd
  L_end_mp3_q_estado_flahs
  _mp3_q_estado_flahs
  L_end_mp3_inicializa
  _mp3_inicializa
  L_end_mp3_retransmite
  _mp3_retransmite
  L_end_mp3_responder
  _mp3_responder
  L_end_mp3_q_estado
  _mp3_q_estado
  L_end_mp3_q_volumen
  _mp3_q_volumen
  L_end_mp3_q_equializa
  _mp3_q_equializa
  L_end_mp3_q_play_mode
  _mp3_q_play_mode
  L_end_mp3_q_software
  _mp3_q_software
  L_end_mp3_q_sd_filas
  _mp3_q_sd_filas
  L_end_mp3_q_usb_filas
  _mp3_q_usb_filas
  L_end_mp3_q_flahs_filas
  _mp3_q_flahs_filas
  L_end_mp3_q_on
  _mp3_q_on
  L_end_mp3_q_sd_actual
  _mp3_q_sd_actual
  L_end_mp3_q_usb_actual
  _mp3_q_usb_actual
  L_end_mp3_q_flahs_actual
  _mp3_q_flahs_actual
  L_end_mp3_stop
  _mp3_stop
  L_Button0
  L_Button1
  L_Button2
  L_Button3
  L_end_Button
  _Button
  L__Button5
  L__Button6
  L_Delay_10us0
  L_Delay_22us1
  L_Delay_50us2
  L_Delay_80us3
  L_Delay_500us4
  L_Delay_5500us5
  L_Delay_1ms6
  L_Delay_5ms7
  L_Delay_8ms8
  L_Delay_10ms9
  L_Delay_100ms10
  L_Delay_1sec11
  L_boot16_Delay_5ms12
  L_Delay_Cyc13
  L_Delay_Cyc14
  L_VDelay_ms15
  L_VDelay_ms16
  L_VDelay_ms17
  L_VDelay_Advanced_ms18
  L_VDelay_Advanced_ms19
  L_VDelay_Advanced_ms20
  L_end_Get_Fosc_kHz
  _Get_Fosc_kHz
  L_end_Delay_1us
  _Delay_1us
  L_end_Delay_10us
  _Delay_10us
  L_end_Delay_22us
  _Delay_22us
  L_end_Delay_50us
  _Delay_50us
  L_end_Delay_80us
  _Delay_80us
  L_end_Delay_500us
  _Delay_500us
  L_end_Delay_5500us
  _Delay_5500us
  L_end_Delay_1ms
  _Delay_1ms
  L_end_Delay_5ms
  _Delay_5ms
  L_end_Delay_8ms
  _Delay_8ms
  L_end_Delay_10ms
  _Delay_10ms
  L_end_Delay_100ms
  _Delay_100ms
  L_end_Delay_1sec
  _Delay_1sec
  L_end_boot16_Delay_5ms
  _boot16_Delay_5ms
  L_end_Delay_Cyc
  _Delay_Cyc
  L_end_VDelay_ms
  _VDelay_ms
  L__VDelay_ms38
  L__VDelay_ms39
  L__VDelay_ms40
  L_end_VDelay_Advanced_ms
  _VDelay_Advanced_ms
  L__VDelay_Advanced_ms42
  L__VDelay_Advanced_ms43
  L__VDelay_Advanced_ms44
  L_loopCA2AWs
  L_CA2AWend
  _CCA2AW_Loop1
  L_loopCS2Ss
  L_CS2Send
  _CCS2S_Loop1
  L_CCS2Send
  L_loopFZinSWs
  L_FZinSend
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
  L_UART1_Init0
  L_UART1_Init1
  L_UART1_Read2
  L_UART1_Write3
  L_UART1_Write4
  L_UART1_Write_Text5
  L_UART1_Write_Text6
  L_UART1_Read_Text7
  L_UART1_Read_Text8
  L_UART1_Read_Text9
  L_UART1_Read_Text10
  L_UART1_Read_Text11
  L_UART1_Read_Text12
  L_UART1_Read_Text13
  L_UART1_Read_Text14
  L_UART1_Read_Text15
  L_end_UART1_Init
  _UART1_Init
  L_end_UART1_Data_Ready
  _UART1_Data_Ready
  L_end_UART1_Read
  _UART1_Read
  L_end_UART1_Tx_Idle
  _UART1_Tx_Idle
  L_end_UART1_Write
  _UART1_Write
  L_end_UART1_Write_Text
  _UART1_Write_Text
  L_end_UART1_Read_Text
  _UART1_Read_Text
  L_main0
  L_main1
  L_main2
  L_main3
  L_main4
  L_main5
  L_main6
  L_main7
  L_main8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_main17
  L_main18
  L_main19
  L_main20
  L_main21
  L_main22
  L_set_rojo23
  L_set_rojo24
  L_set_amarillo25
  L_set_amarillo26
  L_set_azul27
  L_set_azul28
  L_set_verde29
  L_set_verde30
  L_end_main
  _main
  L__main32
  L__main33
  L__main34
  L__main35
  L__main36
  L__main37
  L__main38
  L_end_init
  _init
  L_end_init_TMR0
  _init_TMR0
  L_end_interrupt
  _interrupt
  L__interrupt42
  L_end_end_TMR0
  _end_TMR0
  L_end_set_rojo
  _set_rojo
  L_end_set_amarillo
  _set_amarillo
  L_end_set_azul
  _set_azul
  L_end_set_verde
  _set_verde
